/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;

import Classes.ClassCarteira;
import Genericas.ClasseGenericaGravar;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 16113041
 */
public class CadCarteira extends javax.swing.JFrame {

    String c_codigo_pesquisa = "";
    int iBloqueio = 0;
    Connection CONN = null;

    /**
     * Creates new form CadCarteira
     */
    public CadCarteira() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    // DECLARACAO DE METODOS
    private void ConectaBanco() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CadCarteira.class.getName()).log(Level.SEVERE, null, ex);
        }
        CONN = null;
        try {
            CONN = DriverManager.getConnection("jdbc:mysql://intracker.com.br/fdb", "fdb", "fdb");
        } catch (SQLException ex) {
            Logger.getLogger(CadCarteira.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void limparCampos() {
        txtCodigo.setText("");
        txtDescricao.setText("");
        txtSaldo.setText("");
        txtCodUsuario.setText("");
    }

    private void bloqueios() {
        iBloqueio = 0;

        if (txtDescricao.getText().length() == 0) {
            iBloqueio = 1;
        };

        if (txtCodUsuario.getText().length() == 0) {
            iBloqueio = 2;
        };

        if (iBloqueio == 1) {
            JOptionPane.showMessageDialog(null, "Descrição não pode ficar em branco!");
            throw new IllegalArgumentException("Descrição não pode ficar em branco!");
        }
        if (iBloqueio == 2) {
            JOptionPane.showMessageDialog(null, "Usuario não pode ficar em branco!");
            throw new IllegalArgumentException("Usuario não pode ficar em branco!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBotoes = new javax.swing.JPanel();
        btnCadArquivo = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnCadBanco = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnListar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtSaldo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCodUsuario = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbPesquisa = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro de Carteira");

        pnlBotoes.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnCadArquivo.setFont(new java.awt.Font("Tahoma", 1, 9)); // NOI18N
        btnCadArquivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/document_icon.gif"))); // NOI18N
        btnCadArquivo.setText("Exportar");
        btnCadArquivo.setToolTipText("");
        btnCadArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadArquivoActionPerformed(evt);
            }
        });

        btnPesquisar.setFont(new java.awt.Font("Tahoma", 1, 9)); // NOI18N
        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/search.png"))); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.setToolTipText("");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnAlterar.setFont(new java.awt.Font("Tahoma", 1, 9)); // NOI18N
        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/edit_16.png"))); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.setToolTipText("");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnSair.setFont(new java.awt.Font("Tahoma", 1, 9)); // NOI18N
        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/door_out.gif"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.setToolTipText("");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnCadBanco.setFont(new java.awt.Font("Tahoma", 1, 9)); // NOI18N
        btnCadBanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/ic_rlt_salvar.gif"))); // NOI18N
        btnCadBanco.setText("Cadastrar");
        btnCadBanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadBancoActionPerformed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Tahoma", 1, 9)); // NOI18N
        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/delete.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnListar.setFont(new java.awt.Font("Tahoma", 1, 9)); // NOI18N
        btnListar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/search.png"))); // NOI18N
        btnListar.setText("Listar");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBotoesLayout = new javax.swing.GroupLayout(pnlBotoes);
        pnlBotoes.setLayout(pnlBotoesLayout);
        pnlBotoesLayout.setHorizontalGroup(
            pnlBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCadBanco, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnListar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCadArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(141, 141, 141))
        );
        pnlBotoesLayout.setVerticalGroup(
            pnlBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCadBanco, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnListar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCadArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Código");

        txtCodigo.setBackground(new java.awt.Color(204, 204, 204));
        txtCodigo.setFont(new java.awt.Font("Verdana", 1, 9)); // NOI18N
        txtCodigo.setToolTipText("");

        jLabel2.setText("Descrição");

        txtDescricao.setFont(new java.awt.Font("Verdana", 1, 9)); // NOI18N
        txtDescricao.setToolTipText("");
        txtDescricao.setPreferredSize(new java.awt.Dimension(150, 20));

        jLabel4.setText("Saldo R$");

        txtSaldo.setBackground(new java.awt.Color(204, 204, 204));
        txtSaldo.setFont(new java.awt.Font("Verdana", 1, 9)); // NOI18N
        txtSaldo.setToolTipText("");

        jLabel5.setText("Cód Usuário");

        txtCodUsuario.setFont(new java.awt.Font("Verdana", 1, 9)); // NOI18N
        txtCodUsuario.setToolTipText("");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/search.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtCodUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCodUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        tbPesquisa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tbPesquisa);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
            .addComponent(pnlBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, 792, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadArquivoActionPerformed
        String caminho_salvar = "";
        String linha_banco = "";
        try {
            Classes.ClassCarteira x1 = new ClassCarteira();
            ClasseGenericaGravar g = new ClasseGenericaGravar();

            x1.setIdcarteira(Integer.parseInt(txtCodigo.getText()));
            x1.setDescricao(txtDescricao.getText());
            x1.setSaldo(Double.parseDouble(txtSaldo.getText()));
            x1.setFkusuario(txtCodUsuario.getText());

            linha_banco = linha_banco + " idmauricio_zaquia_carteira " + x1.getIdcarteira() + ';';
            linha_banco = linha_banco + " descricao " + x1.getDescricao() + ';';
            linha_banco = linha_banco + " saldo " + x1.getSaldo() + ';';
            linha_banco = linha_banco + " fkusuario " + x1.getFkusuario() + ';';

            Genericas.CaminhoGravarLer cgl = new Genericas.CaminhoGravarLer();
            caminho_salvar = JOptionPane.showInputDialog("Digite o caminho para gravar junto com o nome", cgl.CAMINHOGRAVARLER);

            if (caminho_salvar != null) {
                g.GravarArquivo(caminho_salvar, linha_banco);
            }
        } catch (NumberFormatException E) {
            System.out.println("Telas.CadUsuario.btnCadastrarActionPerformed()" + E.getMessage() + E.getClass());
            JOptionPane.showMessageDialog(null, "Houve um erro na hora de cadastrar a carteira, verifique os campos numéricos e tente novamente!");
        } catch (Exception E) {
            System.out.println("Telas.CadUsuario.btnCadastrarActionPerformed()" + E.getMessage() + E.getClass());
            JOptionPane.showMessageDialog(null, "Houve um erro na hora de cadastrar a carteira, tente novamente!");
        } finally {
        }
    }//GEN-LAST:event_btnCadArquivoActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        ConectaBanco();
        try {
            Statement stmt = null;
            try {
                stmt = CONN.createStatement();
            } catch (SQLException ex) {
                Logger.getLogger(CadCarteira.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                this.limparCampos();
                // pedir o codigo para pesquisar
                c_codigo_pesquisa = JOptionPane.showInputDialog(null, "Digite o código que deseja pesquisar!");

                // comando de select
                ResultSet rs = stmt.executeQuery("SELECT sum(mzmc.valor_credito - mzmc.valor_debito) AS saldo_carteira, "
                        + "	mzc.descricao, "
                        + "	mzc.idmauricio_zaquia_carteira, "
                        + "     mzu.nome AS nome_usuario, "
                        + "     mzu.idmauricio_zaquia_usuario AS codigo_usuario "
                        + "FROM mauricio_zaquia_carteira mzc "
                        + "LEFT JOIN mauricio_zaquia_movimento_carteira mzmc ON mzmc.fkcarteira = mzc.idmauricio_zaquia_carteira "
                        + "LEFT JOIN mauricio_zaquia_usuario mzu ON mzu.idmauricio_zaquia_usuario = mzc.fkusuario "
                        + "WHERE mzc.idmauricio_zaquia_carteira = " + c_codigo_pesquisa + " "
                        + "GROUP BY mzc.descricao,mzc.idmauricio_zaquia_carteira;");

                try {
                    while (rs.next()) {
                        if (rs != null) {
                            txtCodigo.setText(rs.getString("idmauricio_zaquia_carteira"));
                            txtDescricao.setText(rs.getString("descricao"));
                            txtSaldo.setText(rs.getString("saldo_carteira"));
                            txtCodUsuario.setText(rs.getString("codigo_usuario"));
                        } else {
                            JOptionPane.showMessageDialog(null, "Registro nao encontrado!");
                        }
                    }
                } finally {
                    try {
                        rs.close();
                    } catch (Throwable ignore) {
                    }
                    if (txtCodigo.getText().length() == 0) {
                        JOptionPane.showMessageDialog(null, "Registro nao encontrado!");
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(CadCarteira.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    stmt.close();
                } catch (Throwable ignore) {
                }
            }
        } finally {
            try {
                CONN.close();
            } catch (Throwable ignore) {
            }
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnCadBancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadBancoActionPerformed

        bloqueios();

        ConectaBanco();
        try {
            Statement stmt = null;
            try {
                stmt = CONN.createStatement();
            } catch (SQLException ex) {
                Logger.getLogger(CadCarteira.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {

                Classes.ClassCarteira x1 = new ClassCarteira();

                x1.setDescricao(txtDescricao.getText());
                x1.setFkusuario(txtCodUsuario.getText());

                String monta_campos = "'" + x1.getDescricao() + "'" + ","
                        + "'" + x1.getFkusuario() + "'";

                // comando de insercao
                stmt.execute("INSERT INTO mauricio_zaquia_carteira(descricao,fkusuario) VALUES (" + monta_campos + ") ");
                JOptionPane.showMessageDialog(null, "Cadastrado com sucesso!");

            } catch (SQLException ex) {
                Logger.getLogger(CadCarteira.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Houve um erro na hora de inserir os dados, tente novamente!");
            } finally {
                try {
                    stmt.close();
                } catch (Throwable ignore) {
                }
            }
        } finally {

            try {
                CONN.close();
            } catch (Throwable ignore) {
            }

            btnListar.doClick();
        }
    }//GEN-LAST:event_btnCadBancoActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        ConectaBanco();
        try {
            Statement stmt = null;
            try {
                stmt = CONN.createStatement();
            } catch (SQLException ex) {
                Logger.getLogger(CadCarteira.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                //c_codigo_pesquisa = JOptionPane.showInputDialog(null, "Digite o código que deseja excluir!");
                c_codigo_pesquisa = txtCodigo.getText();

                if (c_codigo_pesquisa.length() > 0) {
                    stmt.execute("DELETE FROM mauricio_zaquia_carteira WHERE idmauricio_zaquia_carteira = " + c_codigo_pesquisa);
                    JOptionPane.showMessageDialog(null, "Excluído com sucesso!");
                    this.limparCampos();
                }
            } catch (SQLException ex) {
                Logger.getLogger(CadCarteira.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    stmt.close();
                } catch (Throwable ignore) {
                }
            }
        } finally {
            try {
                CONN.close();
            } catch (Throwable ignore) {
            }
            btnListar.doClick();
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        bloqueios();
        ConectaBanco();
        try {
            Statement stmt = null;
            try {
                stmt = CONN.createStatement();
            } catch (SQLException ex) {
                Logger.getLogger(CadCarteira.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                //c_codigo_pesquisa = JOptionPane.showInputDialog(null, "Digite o código que deseja excluir!");
                c_codigo_pesquisa = txtCodigo.getText();

                if (c_codigo_pesquisa.length() > 0) {
                    stmt.execute("UPDATE mauricio_zaquia_carteira SET descricao = '" + txtDescricao.getText() + "'"
                            + ", fkusuario = '" + txtCodUsuario.getText() + "'"
                            + "WHERE idmauricio_zaquia_carteira = " + c_codigo_pesquisa);

                    JOptionPane.showMessageDialog(null, "Alterado com sucesso!");
                    this.limparCampos();
                }
            } catch (SQLException ex) {
                Logger.getLogger(CadCarteira.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    stmt.close();
                } catch (Throwable ignore) {

                }
            }
        } finally {
            try {
                CONN.close();
            } catch (Throwable ignore) {
            }
            btnListar.doClick();
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        limparCampos();

        String[] colunasTabela = new String[]{"Código", "Nome", "Saldo", "Nome Usuário", "Cód Usuário"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        tbPesquisa.setModel(modeloTabela);

        ConectaBanco();

        try {
            Statement stmt = null;
            try {
                stmt = CONN.createStatement();
            } catch (SQLException ex) {
                Logger.getLogger(CadCarteira.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                this.limparCampos();
                ResultSet rs = stmt.executeQuery("SELECT sum(mzmc.valor_credito - mzmc.valor_debito) AS saldo_carteira, "
                        + "	mzc.descricao,"
                        + "	mzc.idmauricio_zaquia_carteira, "
                        + "     mzu.nome AS nome_usuario, "
                        + "     mzu.idmauricio_zaquia_usuario AS codigo_usuario "
                        + "FROM mauricio_zaquia_carteira mzc "
                        + "LEFT JOIN mauricio_zaquia_movimento_carteira mzmc ON mzmc.fkcarteira = mzc.idmauricio_zaquia_carteira "
                        + "LEFT JOIN mauricio_zaquia_usuario mzu ON mzu.idmauricio_zaquia_usuario = mzc.fkusuario "
                        + "GROUP BY mzc.descricao,mzc.idmauricio_zaquia_carteira;");
                try {
                    while (rs.next()) {
                        if (rs != null) {
                            modeloTabela.addRow(new String[]{
                                Integer.toString(rs.getInt("idmauricio_zaquia_carteira")),
                                rs.getString("descricao"),
                                rs.getString("saldo_carteira"),
                                rs.getString("nome_usuario"),
                                rs.getString("codigo_usuario")
                            }
                            );
                        } else {
                            JOptionPane.showMessageDialog(null, "Registro nao encontrado!");
                        }
                    }
                } finally {
                    try {
                        rs.close();
                    } catch (Throwable ignore) {

                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(CadCarteira.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    stmt.close();
                } catch (Throwable ignore) {
                }
            }
        } finally {

            try {
                CONN.close();
            } catch (Throwable ignore) {
            }
        }
    }//GEN-LAST:event_btnListarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String[] colunasTabela = new String[]{"Código", "Nome"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        tbPesquisa.setModel(modeloTabela);

        ConectaBanco();
        try {
            Statement stmt = null;
            try {
                stmt = CONN.createStatement();
            } catch (SQLException ex) {
                Logger.getLogger(CadCarteira.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                ResultSet rs = stmt.executeQuery("SELECT * FROM mauricio_zaquia_usuario;");
                try {
                    while (rs.next()) {
                        if (rs != null) {
                            modeloTabela.addRow(new String[]{
                                Integer.toString(rs.getInt("idmauricio_zaquia_usuario")),
                                rs.getString("nome")
                            }
                            );
                        } else {
                            JOptionPane.showMessageDialog(null, "Registro nao encontrado!");
                        }
                    }
                } finally {
                    try {
                        rs.close();
                    } catch (Throwable ignore) {

                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(CadCarteira.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    stmt.close();
                } catch (Throwable ignore) {
                }
            }
        } finally {

            try {
                CONN.close();
            } catch (Throwable ignore) {
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadCarteira.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadCarteira.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadCarteira.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadCarteira.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadCarteira().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCadArquivo;
    private javax.swing.JButton btnCadBanco;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnlBotoes;
    private javax.swing.JTable tbPesquisa;
    private javax.swing.JTextField txtCodUsuario;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtSaldo;
    // End of variables declaration//GEN-END:variables
}
